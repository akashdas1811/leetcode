Given two numbers, hour and minutes. Return the smaller angle (in degrees) formed between the hour and the minute hand.

 

Example 1:



Input: hour = 12, minutes = 30
Output: 165
Example 2:



Input: hour = 3, minutes = 30
Output: 75
Example 3:



Input: hour = 3, minutes = 15
Output: 7.5
Example 4:

Input: hour = 4, minutes = 50
Output: 155
Example 5:

Input: hour = 12, minutes = 0
Output: 0

Approach:
The idea is to take 12:00 (h = 12, m = 0) as a reference. Following are detailed steps.

1) Calculate the angle made by hour hand with respect to 12:00 in h hours and m minutes.
2) Calculate the angle made by minute hand with respect to 12:00 in h hours and m minutes.
3) The difference between two angles is the angle between two hands.

How to calculate the two angles with respect to 12:00?
The minute hand moves 360 degree in 60 minute(or 6 degree in one minute) and hour hand moves 360 degree in 12 hours(or 0.5 degree in 1 minute).
In h hours and m minutes, the minute hand would move (h*60 + m)*6 and hour hand would move (h*60 + m)*0.5.

/**
         * What do i know :
         *
         * Total Degrees = 360. For 12 hours
         * In 1 hour = 360/12 = 30 degrees.
         * In 1 hour(60 minutes) = 30 degree, So 1 minute = 30/60 ==> 1/2;
         *
         * Now how much hour has moved in corresponding to minute.
         * HourDegree = hour * 30 + (minutes/60) * 30;
         *
         * Or we can also write as
         * HourDegree = hour * 30 + minute/2
         *
         * For Minutes it's simple :
         * In 1 minute = 360/60 ==> 6 degree.
         *
         * So for given minutes
         * MinutesDegree = minutes * 6;
         *
         * Edge case if someone has given time 12:30....we have to consider time from 0 to 11... else 12 * 30 will overshoot
         */
         

Code in c++:

class Solution {
public:
    double angleClock(int h, int m) {
        if(h<0 or h>12 or m<0 or m>60){
            return -1;
        }
        if(h==12){
            h=0;
        }
        if(m==60){
            m=0;
        }
        double h1 = 0.5*(h*60 + m);
        double m1 = 6*m;
        double ang = abs(h1-m1);
        ang=min(360-ang,ang);
        return ang;
    }
};
