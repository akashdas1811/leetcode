Given an array of integers, find out whether there are two distinct indices i and j in the array such that the absolute difference between nums[i] and nums[j] is at most t and the absolute difference between i and j is at most k.

Example 1:

Input: nums = [1,2,3,1], k = 3, t = 0
Output: true
Example 2:

Input: nums = [1,0,1,1], k = 1, t = 2
Output: true
Example 3:

Input: nums = [1,5,9,1,5,9], k = 2, t = 3
Output: false


Code in C++:

class Solution {
public:
    bool containsNearbyAlmostDuplicate(vector<int>& nums, int k, int t) {
        int n=nums.size();
        vector<pair<int,int>>v;
        for(int i=0;i<n;i++){
            v.push_back({nums[i],i});
        }
        sort(v.begin(),v.end());
        int i=0,j=1;
        while(i<n and j<n){
            if(abs((long long int)v[i].first-(long long int)v[j].first)<=t and abs(v[i].second-v[j].second)<=k){
                return true;
            }
            else if(abs((long long int)v[i].first-(long long int)v[j].first)>t){
                i++;
            }
            else if(abs(v[i].second-v[j].second)>k){
                j++;
            }
            if(i==j){
                j++;
            }
        }
        return false;
    }
};
